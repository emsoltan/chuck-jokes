{"ast":null,"code":"var _jsxFileName = \"/home/emsoltan/Nuts/react-module/chuck-jokes/src/components/DataFetching.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MyContext from \"../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataFetching = () => {\n  _s();\n\n  // Declaring states\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(true);\n  const [joke, setJoke] = useState({}); //we initiate it to an empty object, this is the data that we will display\n\n  useEffect(() => {\n    axios.get(\"https://api.chucknorris.io/joke/categories\").then(response => {\n      //   setLoading(false)\n      setJoke(joke);\n      setError(\"\");\n    }).catch(response => {\n      setLoading(false);\n      setJoke({});\n      setError(\"Something went wrong here, try again!\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? \"Loading\" : joke, error ? error : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DataFetching, \"E4z510TQpmeL92Km6zDlu+SsSmM=\");\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/home/emsoltan/Nuts/react-module/chuck-jokes/src/components/DataFetching.jsx"],"names":["React","useState","useEffect","axios","MyContext","DataFetching","loading","setLoading","error","setError","joke","setJoke","get","then","response","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAJyB,CAIa;;AAEtCC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFS,GADH,CACO,4CADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACEH,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KANH,EAOGM,KAPH,CAOSD,QAAQ,IAAE;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,MAAAA,QAAQ,CAAC,uCAAD,CAAR;AACH,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAcA,sBAAO;AAAA,eACFH,OAAO,GAAE,SAAF,GAAYI,IADjB,EAEFF,KAAK,GAAEA,KAAF,GAAS,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CAxBD;;GAAMH,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MyContext from \"../context/MyContext\"\nconst DataFetching = () => {\n  // Declaring states\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(true);\n  const [joke, setJoke] = useState({}); //we initiate it to an empty object, this is the data that we will display\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.chucknorris.io/joke/categories\")\n      .then(response => {\n        //   setLoading(false)\n          setJoke(joke)\n          setError(\"\")\n      })\n      .catch(response=>{\n          setLoading(false)\n          setJoke({})\n          setError(\"Something went wrong here, try again!\")\n      })\n  }, []);\n  return <div>\n      {loading? \"Loading\":joke}\n      {error? error: null}\n  </div>;\n};\n\nexport default DataFetching;\n"]},"metadata":{},"sourceType":"module"}