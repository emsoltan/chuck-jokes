{"ast":null,"code":"var _jsxFileName = \"/home/emsoltan/Nuts/react-module/chuck-jokes/chuck-jokes/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = props => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const [select, setSelect] = useState(\"animal\");\n  const [joke, setJoke] = useState(\"\");\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\"https://api.chucknorris.io/jokes/categories\");\n        const data = await response.json();\n        setCategories(data);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getData();\n  }, []);\n  const url = \"https://api.chucknorris.io/jokes/random?category=\";\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`${url}${select}`);\n        const data = await response.json();\n        setJoke(data.value);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getData();\n  }, [select]);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      categories,\n      select,\n      setSelect,\n      joke\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"yV92LVupJ9L+D5TSbguBU36l+uE=\");\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/home/emsoltan/Nuts/react-module/chuck-jokes/chuck-jokes/src/context/MyProvider.jsx"],"names":["React","useState","useEffect","MyContext","MyProvider","props","categories","setCategories","select","setSelect","joke","setJoke","getData","response","fetch","data","json","console","log","error","url","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,QAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CAD0B,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,QAAAA,aAAa,CAACQ,IAAD,CAAb;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,OAPD,CAOE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KAXD;;AAYAP,IAAAA,OAAO;AACR,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMQ,GAAG,GAAG,mDAAZ;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEM,GAAI,GAAEZ,MAAO,EAAjB,CAA5B;AACA,cAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,QAAAA,OAAO,CAACI,IAAI,CAACM,KAAN,CAAP;AACD,OAJD,CAIE,OAAOF,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KARD;;AASAP,IAAAA,OAAO;AACR,GAXQ,EAWN,CAACJ,MAAD,CAXM,CAAT;AAaA,sBACE,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAF;AAAcE,MAAAA,MAAd;AAAsBC,MAAAA,SAAtB;AAAiCC,MAAAA;AAAjC,KAA3B;AAAA,cACGL,KAAK,CAACiB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMlB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nconst MyProvider = (props) => {\n  const [categories, setCategories] = useState([]);\n  const [select, setSelect] = useState(\"animal\");\n  const [joke, setJoke] = useState(\"\");\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\n          \"https://api.chucknorris.io/jokes/categories\"\n        );\n        const data = await response.json();\n        setCategories(data);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n\n  const url = \"https://api.chucknorris.io/jokes/random?category=\";\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`${url}${select}`);\n        const data = await response.json();\n        setJoke(data.value);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, [select]);\n\n  return (\n    <MyContext.Provider value={{ categories, select, setSelect, joke }}>\n      {props.children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"]},"metadata":{},"sourceType":"module"}